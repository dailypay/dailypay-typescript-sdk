/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { jobsList } from "../funcs/jobsList.js";
import { jobsRead } from "../funcs/jobsRead.js";
import { jobsUpdate } from "../funcs/jobsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Jobs extends ClientSDK {
  /**
   * Get a job object
   *
   * @remarks
   * Returns details about a person's employment.
   */
  async read(
    request: operations.ReadJobRequest,
    options?: RequestOptions,
  ): Promise<models.JobData> {
    return unwrapAsync(jobsRead(
      this,
      request,
      options,
    ));
  }

  /**
   * Update paycheck settings or deactivate a job
   *
   * @remarks
   * Update this job to set where pay should be deposited for paychecks related to this job,  or deactivate on-demand pay for this job.
   * Returns the job object if the update succeeded. Returns an error if update parameters are invalid.
   */
  async update(
    request: operations.UpdateJobRequest,
    options?: RequestOptions,
  ): Promise<models.JobData> {
    return unwrapAsync(jobsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a list of job objects
   *
   * @remarks
   * Returns a collection of job objects. This object represents a person's employment details.
   * See [Filtering Jobs](https://developer.dailypay.com/tag/Filtering#section/Supported-Endpoint-Filters) for a description of filterable fields.
   */
  async list(
    request?: operations.ListJobsRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.JobsData> {
    return unwrapAsync(jobsList(
      this,
      request,
      options,
    ));
  }
}
