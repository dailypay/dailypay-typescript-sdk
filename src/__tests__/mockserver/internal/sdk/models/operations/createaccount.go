// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type CreateAccountGlobals struct {
	// The version of the DailyPay API to use for this request. If not provided, the latest version of the API will be used.
	//
	Version *int64 `default:"3" header:"style=simple,explode=false,name=DailyPay-API-Version"`
}

func (c CreateAccountGlobals) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateAccountGlobals) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *CreateAccountGlobals) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

type CreateAccountRequest struct {
	// The version of the DailyPay API to use for this request. If not provided, the latest version of the API will be used.
	//
	Version     *int64                      `default:"3" header:"style=simple,explode=false,name=DailyPay-API-Version"`
	AccountData components.AccountDataInput `request:"mediaType=application/vnd.api+json"`
}

func (c CreateAccountRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateAccountRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"AccountData"}); err != nil {
		return err
	}
	return nil
}

func (o *CreateAccountRequest) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *CreateAccountRequest) GetAccountData() components.AccountDataInput {
	if o == nil {
		return components.AccountDataInput{}
	}
	return o.AccountData
}

type CreateAccountResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Returns the account object.
	AccountData *components.AccountDataOutput
}

func (o *CreateAccountResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateAccountResponse) GetAccountData() *components.AccountDataOutput {
	if o == nil {
		return nil
	}
	return o.AccountData
}
