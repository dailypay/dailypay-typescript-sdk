// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type ListOrganizationsGlobals struct {
	// The version of the DailyPay API to use for this request. If not provided, the latest version of the API will be used.
	//
	Version *int64 `default:"3" header:"style=simple,explode=false,name=DailyPay-API-Version"`
}

func (l ListOrganizationsGlobals) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListOrganizationsGlobals) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListOrganizationsGlobals) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

type ListOrganizationsRequest struct {
	// The version of the DailyPay API to use for this request. If not provided, the latest version of the API will be used.
	//
	Version *int64 `default:"3" header:"style=simple,explode=false,name=DailyPay-API-Version"`
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	FilterBy *string `queryParam:"style=form,explode=true,name=filter"`
}

func (l ListOrganizationsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListOrganizationsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListOrganizationsRequest) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *ListOrganizationsRequest) GetFilterBy() *string {
	if o == nil {
		return nil
	}
	return o.FilterBy
}

type ListOrganizationsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Returns a list of organization objects that match the filter. If no organizations match the filter, the resulting collection will be empty. If no filter is provider, the resulting collection will include all accessible organizations.
	OrganizationsData *components.OrganizationsData
}

func (o *ListOrganizationsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListOrganizationsResponse) GetOrganizationsData() *components.OrganizationsData {
	if o == nil {
		return nil
	}
	return o.OrganizationsData
}
