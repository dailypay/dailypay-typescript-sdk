// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type ListJobsGlobals struct {
	// The version of the DailyPay API to use for this request. If not provided, the latest version of the API will be used.
	//
	Version *int64 `default:"3" header:"style=simple,explode=false,name=DailyPay-API-Version"`
}

func (l ListJobsGlobals) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListJobsGlobals) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *ListJobsGlobals) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

type ListJobsRequest struct {
	// The version of the DailyPay API to use for this request. If not provided, the latest version of the API will be used.
	//
	Version *int64 `default:"3" header:"style=simple,explode=false,name=DailyPay-API-Version"`
	// Limit the results to documents with an external identifier matching exactly at the specified key.
	FilterExternalIdentifiersPrimaryIdentifier *string `queryParam:"style=form,explode=true,name=filter[external_identifiers.primary_identifier]"`
	// Limit the results to documents with an external identifier matching exactly at the specified key.
	FilterExternalIdentifiersEmployeeID *string `queryParam:"style=form,explode=true,name=filter[external_identifiers.employee_id]"`
	// Limit the results to documents with an external identifier matching exactly at the specified key.
	FilterExternalIdentifiersGroup *string `queryParam:"style=form,explode=true,name=filter[external_identifiers.group]"`
	// Limit the results to documents related to a specific person
	FilterPersonID *string `queryParam:"style=form,explode=true,name=filter[person.id]"`
	// _Not yet supported_ Limit the results to documents related to a specific organization
	FilterOrganizationID *string `queryParam:"style=form,explode=true,name=filter[organization.id]"`
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	FilterBy *string `queryParam:"style=form,explode=true,name=filter"`
}

func (l ListJobsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListJobsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *ListJobsRequest) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *ListJobsRequest) GetFilterExternalIdentifiersPrimaryIdentifier() *string {
	if o == nil {
		return nil
	}
	return o.FilterExternalIdentifiersPrimaryIdentifier
}

func (o *ListJobsRequest) GetFilterExternalIdentifiersEmployeeID() *string {
	if o == nil {
		return nil
	}
	return o.FilterExternalIdentifiersEmployeeID
}

func (o *ListJobsRequest) GetFilterExternalIdentifiersGroup() *string {
	if o == nil {
		return nil
	}
	return o.FilterExternalIdentifiersGroup
}

func (o *ListJobsRequest) GetFilterPersonID() *string {
	if o == nil {
		return nil
	}
	return o.FilterPersonID
}

func (o *ListJobsRequest) GetFilterOrganizationID() *string {
	if o == nil {
		return nil
	}
	return o.FilterOrganizationID
}

func (o *ListJobsRequest) GetFilterBy() *string {
	if o == nil {
		return nil
	}
	return o.FilterBy
}

type ListJobsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Returns a list of job objects.
	JobsData *components.JobsData
}

func (o *ListJobsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListJobsResponse) GetJobsData() *components.JobsData {
	if o == nil {
		return nil
	}
	return o.JobsData
}
