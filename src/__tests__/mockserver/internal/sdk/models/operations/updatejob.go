// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type UpdateJobGlobals struct {
	// The version of the DailyPay API to use for this request. If not provided, the latest version of the API will be used.
	//
	Version *int64 `default:"3" header:"style=simple,explode=false,name=DailyPay-API-Version"`
}

func (u UpdateJobGlobals) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateJobGlobals) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *UpdateJobGlobals) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

type UpdateJobRequest struct {
	// The version of the DailyPay API to use for this request. If not provided, the latest version of the API will be used.
	//
	Version *int64 `default:"3" header:"style=simple,explode=false,name=DailyPay-API-Version"`
	// Unique ID of the job
	JobID         string                   `pathParam:"style=simple,explode=false,name=job_id"`
	JobUpdateData components.JobUpdateData `request:"mediaType=application/vnd.api+json"`
}

func (u UpdateJobRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateJobRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, []string{"job_id", "JobUpdateData"}); err != nil {
		return err
	}
	return nil
}

func (o *UpdateJobRequest) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *UpdateJobRequest) GetJobID() string {
	if o == nil {
		return ""
	}
	return o.JobID
}

func (o *UpdateJobRequest) GetJobUpdateData() components.JobUpdateData {
	if o == nil {
		return components.JobUpdateData{}
	}
	return o.JobUpdateData
}

type UpdateJobResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Returns the job object.
	JobData *components.JobData
}

func (o *UpdateJobResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateJobResponse) GetJobData() *components.JobData {
	if o == nil {
		return nil
	}
	return o.JobData
}
