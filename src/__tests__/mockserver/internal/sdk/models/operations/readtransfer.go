// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type ReadTransferGlobals struct {
	// The version of the DailyPay API to use for this request. If not provided, the latest version of the API will be used.
	//
	Version *int64 `default:"3" header:"style=simple,explode=false,name=DailyPay-API-Version"`
}

func (r ReadTransferGlobals) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *ReadTransferGlobals) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *ReadTransferGlobals) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

type ReadTransferRequest struct {
	// The version of the DailyPay API to use for this request. If not provided, the latest version of the API will be used.
	//
	Version *int64 `default:"3" header:"style=simple,explode=false,name=DailyPay-API-Version"`
	// Add related resources to the response.
	//
	// The value of the include parameter must be a comma-separated (U+002C COMMA, “,”) list of relationship paths.
	//
	Include *string `queryParam:"style=form,explode=true,name=include"`
	// Unique ID of the transfer
	TransferID string `pathParam:"style=simple,explode=false,name=transfer_id"`
}

func (r ReadTransferRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *ReadTransferRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"transfer_id"}); err != nil {
		return err
	}
	return nil
}

func (o *ReadTransferRequest) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *ReadTransferRequest) GetInclude() *string {
	if o == nil {
		return nil
	}
	return o.Include
}

func (o *ReadTransferRequest) GetTransferID() string {
	if o == nil {
		return ""
	}
	return o.TransferID
}

type ReadTransferResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Returns the newly created transfer object.
	TransferData *components.TransferData
}

func (o *ReadTransferResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ReadTransferResponse) GetTransferData() *components.TransferData {
	if o == nil {
		return nil
	}
	return o.TransferData
}
