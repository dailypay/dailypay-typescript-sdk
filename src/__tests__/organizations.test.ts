/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { SDK } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Organizations Read Organization", async () => {
  const testHttpClient = createTestHTTPClient("readOrganization");

  const sdk = new SDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    version: 3,
    httpClient: testHttpClient,
    security: {
      oauthUserToken: "<YOUR_OAUTH_USER_TOKEN_HERE>",
    },
  });

  const result = await sdk.organizations.read({
    organizationId: "123e4567-e89b-12d3-a456-426614174000",
  });
  expect(result.httpMeta.response.status).toBe(200);
  expect(result.organizationData).toBeDefined();
  expect(result.organizationData).toEqual({
    data: {
      type: "organizations",
      id: "f0b30634-108c-439c-a8c1-c6a91197f022",
      attributes: {
        name: "DailyPay",
        products: [
          "ODP",
          "FRIDAY",
        ],
      },
      links: {
        self:
          "https://api.dailypay.com/rest/organizations/f0b30634-108c-439c-a8c1-c6a91197f022",
      },
    },
  });
});

test("Organizations List Organizations", async () => {
  const testHttpClient = createTestHTTPClient("listOrganizations");

  const sdk = new SDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    version: 3,
    httpClient: testHttpClient,
    security: {
      oauthUserToken: "<YOUR_OAUTH_USER_TOKEN_HERE>",
    },
  });

  const result = await sdk.organizations.list();
  expect(result.httpMeta.response.status).toBe(200);
  expect(result.organizationsData).toBeDefined();
  expect(result.organizationsData).toEqual({
    data: [],
  });
});
