/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { SDK } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Paychecks Read Paycheck", async () => {
  const testHttpClient = createTestHTTPClient("readPaycheck");

  const sdk = new SDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    version: 3,
    httpClient: testHttpClient,
    security: {
      oauthClientCredentialsToken: {
        clientID: "<YOUR_CLIENT_ID_HERE>",
        clientSecret: "<YOUR_CLIENT_SECRET_HERE>",
        tokenURL: "<YOUR_TOKEN_URL_HERE>",
      },
    },
  });

  const result = await sdk.paychecks.read({
    paycheckId: "3fa85f64-5717-4562-b3fc-2c963f66afa6",
  });
  expect(result.httpMeta.response.status).toBe(200);
  expect(result.paycheckData).toBeDefined();
  expect(result.paycheckData).toEqual({
    data: {
      type: "paychecks",
      id: "3fa85f64-5717-4562-b3fc-2c963f66afa6",
      attributes: {
        status: "PROCESSING",
        payPeriodEndsAt: new Date("2023-03-15T04:00:00Z"),
        payPeriodStartsAt: new Date("2023-03-15T04:00:00Z"),
        depositExpectedAt: new Date("2023-03-15T04:00:00Z"),
        totalDebited: 0,
        grossEarnings: 0,
        employerWithholdings: 0,
        netEarnings: 0,
        currency: "USD",
      },
      links: {
        self:
          "https://api.dailypay.com/rest/paychecks/f4e2fd6c-b567-447c-a003-b7315b8d22d2",
      },
      relationships: {
        person: {
          data: {
            type: "people",
            id: "3fa8f641-5717-4562-b3fc-2c963f66afa6",
          },
        },
        job: {
          data: {
            type: "jobs",
            id: "e9d84b0d-92ba-43c9-93bf-7c993313fa6f",
          },
        },
      },
    },
  });
});

test("Paychecks List Paychecks", async () => {
  const testHttpClient = createTestHTTPClient("listPaychecks");

  const sdk = new SDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    version: 3,
    httpClient: testHttpClient,
    security: {
      oauthClientCredentialsToken: {
        clientID: "<YOUR_CLIENT_ID_HERE>",
        clientSecret: "<YOUR_CLIENT_SECRET_HERE>",
        tokenURL: "<YOUR_TOKEN_URL_HERE>",
      },
    },
  });

  const result = await sdk.paychecks.list({
    filterDepositExpectedAtGte: new Date("2023-03-15T04:00:00Z"),
    filterDepositExpectedAtLt: new Date("2023-03-15T04:00:00Z"),
    filterPayPeriodEndsAtGte: new Date("2023-03-15T04:00:00Z"),
    filterPayPeriodEndsAtLt: new Date("2023-03-15T04:00:00Z"),
    filterPayPeriodStartsAtGte: new Date("2023-03-15T04:00:00Z"),
    filterPayPeriodStartsAtLt: new Date("2023-03-15T04:00:00Z"),
  });
  expect(result.httpMeta.response.status).toBe(200);
  expect(result.paychecksData).toBeDefined();
  expect(result.paychecksData).toEqual({
    data: [],
  });
});
