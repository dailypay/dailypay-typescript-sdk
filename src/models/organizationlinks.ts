/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type OrganizationLinks = {
  self: string;
};

/** @internal */
export const OrganizationLinks$inboundSchema: z.ZodType<
  OrganizationLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.string(),
});

/** @internal */
export type OrganizationLinks$Outbound = {
  self: string;
};

/** @internal */
export const OrganizationLinks$outboundSchema: z.ZodType<
  OrganizationLinks$Outbound,
  z.ZodTypeDef,
  OrganizationLinks
> = z.object({
  self: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OrganizationLinks$ {
  /** @deprecated use `OrganizationLinks$inboundSchema` instead. */
  export const inboundSchema = OrganizationLinks$inboundSchema;
  /** @deprecated use `OrganizationLinks$outboundSchema` instead. */
  export const outboundSchema = OrganizationLinks$outboundSchema;
  /** @deprecated use `OrganizationLinks$Outbound` instead. */
  export type Outbound = OrganizationLinks$Outbound;
}

export function organizationLinksToJSON(
  organizationLinks: OrganizationLinks,
): string {
  return JSON.stringify(
    OrganizationLinks$outboundSchema.parse(organizationLinks),
  );
}

export function organizationLinksFromJSON(
  jsonString: string,
): SafeParseResult<OrganizationLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OrganizationLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OrganizationLinks' from JSON`,
  );
}
