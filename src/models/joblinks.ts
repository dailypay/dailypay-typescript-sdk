/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type JobLinks = {
  self: string;
};

/** @internal */
export const JobLinks$inboundSchema: z.ZodType<
  JobLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.string(),
});

/** @internal */
export type JobLinks$Outbound = {
  self: string;
};

/** @internal */
export const JobLinks$outboundSchema: z.ZodType<
  JobLinks$Outbound,
  z.ZodTypeDef,
  JobLinks
> = z.object({
  self: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobLinks$ {
  /** @deprecated use `JobLinks$inboundSchema` instead. */
  export const inboundSchema = JobLinks$inboundSchema;
  /** @deprecated use `JobLinks$outboundSchema` instead. */
  export const outboundSchema = JobLinks$outboundSchema;
  /** @deprecated use `JobLinks$Outbound` instead. */
  export type Outbound = JobLinks$Outbound;
}

export function jobLinksToJSON(jobLinks: JobLinks): string {
  return JSON.stringify(JobLinks$outboundSchema.parse(jobLinks));
}

export function jobLinksFromJSON(
  jsonString: string,
): SafeParseResult<JobLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => JobLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'JobLinks' from JSON`,
  );
}
