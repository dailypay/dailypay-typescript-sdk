/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  AccountAttributesOutput,
  AccountAttributesOutput$inboundSchema,
  AccountAttributesOutput$Outbound,
  AccountAttributesOutput$outboundSchema,
} from "./accountattributesoutput.js";
import {
  AccountLinks,
  AccountLinks$inboundSchema,
  AccountLinks$Outbound,
  AccountLinks$outboundSchema,
} from "./accountlinks.js";
import {
  AccountRelationships,
  AccountRelationships$inboundSchema,
  AccountRelationships$Outbound,
  AccountRelationships$outboundSchema,
} from "./accountrelationships.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type AccountResourceOutput = {
  /**
   * The unique identifier of the Account.
   */
  id: string;
  /**
   * The type of the resource. Always `accounts`.
   */
  type: "accounts";
  /**
   * The details of the account.
   */
  attributes: AccountAttributesOutput;
  links: AccountLinks;
  relationships: AccountRelationships;
};

/** @internal */
export const AccountResourceOutput$inboundSchema: z.ZodType<
  AccountResourceOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  type: z.literal("accounts"),
  attributes: AccountAttributesOutput$inboundSchema,
  links: AccountLinks$inboundSchema,
  relationships: AccountRelationships$inboundSchema,
});

/** @internal */
export type AccountResourceOutput$Outbound = {
  id: string;
  type: "accounts";
  attributes: AccountAttributesOutput$Outbound;
  links: AccountLinks$Outbound;
  relationships: AccountRelationships$Outbound;
};

/** @internal */
export const AccountResourceOutput$outboundSchema: z.ZodType<
  AccountResourceOutput$Outbound,
  z.ZodTypeDef,
  AccountResourceOutput
> = z.object({
  id: z.string(),
  type: z.literal("accounts"),
  attributes: AccountAttributesOutput$outboundSchema,
  links: AccountLinks$outboundSchema,
  relationships: AccountRelationships$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountResourceOutput$ {
  /** @deprecated use `AccountResourceOutput$inboundSchema` instead. */
  export const inboundSchema = AccountResourceOutput$inboundSchema;
  /** @deprecated use `AccountResourceOutput$outboundSchema` instead. */
  export const outboundSchema = AccountResourceOutput$outboundSchema;
  /** @deprecated use `AccountResourceOutput$Outbound` instead. */
  export type Outbound = AccountResourceOutput$Outbound;
}

export function accountResourceOutputToJSON(
  accountResourceOutput: AccountResourceOutput,
): string {
  return JSON.stringify(
    AccountResourceOutput$outboundSchema.parse(accountResourceOutput),
  );
}

export function accountResourceOutputFromJSON(
  jsonString: string,
): SafeParseResult<AccountResourceOutput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AccountResourceOutput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountResourceOutput' from JSON`,
  );
}
