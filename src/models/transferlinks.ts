/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type TransferLinks = {
  self: string;
};

/** @internal */
export const TransferLinks$inboundSchema: z.ZodType<
  TransferLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.string(),
});

/** @internal */
export type TransferLinks$Outbound = {
  self: string;
};

/** @internal */
export const TransferLinks$outboundSchema: z.ZodType<
  TransferLinks$Outbound,
  z.ZodTypeDef,
  TransferLinks
> = z.object({
  self: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TransferLinks$ {
  /** @deprecated use `TransferLinks$inboundSchema` instead. */
  export const inboundSchema = TransferLinks$inboundSchema;
  /** @deprecated use `TransferLinks$outboundSchema` instead. */
  export const outboundSchema = TransferLinks$outboundSchema;
  /** @deprecated use `TransferLinks$Outbound` instead. */
  export type Outbound = TransferLinks$Outbound;
}

export function transferLinksToJSON(transferLinks: TransferLinks): string {
  return JSON.stringify(TransferLinks$outboundSchema.parse(transferLinks));
}

export function transferLinksFromJSON(
  jsonString: string,
): SafeParseResult<TransferLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TransferLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TransferLinks' from JSON`,
  );
}
