/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  TransferAttributes,
  TransferAttributes$inboundSchema,
  TransferAttributes$Outbound,
  TransferAttributes$outboundSchema,
} from "./transferattributes.js";
import {
  TransferLinks,
  TransferLinks$inboundSchema,
  TransferLinks$Outbound,
  TransferLinks$outboundSchema,
} from "./transferlinks.js";
import {
  TransferRelationships,
  TransferRelationships$inboundSchema,
  TransferRelationships$Outbound,
  TransferRelationships$outboundSchema,
} from "./transferrelationships.js";

export type TransferResource = {
  type: "transfers";
  id: string;
  /**
   * An object representing a transfer of money from one account to another.
   *
   * @remarks
   * Created when a person takes an advance against a future paycheck, or on a daily basis
   * when we update estimated earnings based on current employment.
   */
  attributes: TransferAttributes;
  links: TransferLinks;
  relationships: TransferRelationships;
};

/** @internal */
export const TransferResource$inboundSchema: z.ZodType<
  TransferResource,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal("transfers"),
  id: z.string(),
  attributes: TransferAttributes$inboundSchema,
  links: TransferLinks$inboundSchema,
  relationships: TransferRelationships$inboundSchema,
});

/** @internal */
export type TransferResource$Outbound = {
  type: "transfers";
  id: string;
  attributes: TransferAttributes$Outbound;
  links: TransferLinks$Outbound;
  relationships: TransferRelationships$Outbound;
};

/** @internal */
export const TransferResource$outboundSchema: z.ZodType<
  TransferResource$Outbound,
  z.ZodTypeDef,
  TransferResource
> = z.object({
  type: z.literal("transfers"),
  id: z.string(),
  attributes: TransferAttributes$outboundSchema,
  links: TransferLinks$outboundSchema,
  relationships: TransferRelationships$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TransferResource$ {
  /** @deprecated use `TransferResource$inboundSchema` instead. */
  export const inboundSchema = TransferResource$inboundSchema;
  /** @deprecated use `TransferResource$outboundSchema` instead. */
  export const outboundSchema = TransferResource$outboundSchema;
  /** @deprecated use `TransferResource$Outbound` instead. */
  export type Outbound = TransferResource$Outbound;
}

export function transferResourceToJSON(
  transferResource: TransferResource,
): string {
  return JSON.stringify(
    TransferResource$outboundSchema.parse(transferResource),
  );
}

export function transferResourceFromJSON(
  jsonString: string,
): SafeParseResult<TransferResource, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TransferResource$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TransferResource' from JSON`,
  );
}
