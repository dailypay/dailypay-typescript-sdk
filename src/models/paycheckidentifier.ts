/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type PaycheckIdentifier = {
  type: "paychecks";
  id: string;
};

/** @internal */
export const PaycheckIdentifier$inboundSchema: z.ZodType<
  PaycheckIdentifier,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal("paychecks"),
  id: z.string(),
});

/** @internal */
export type PaycheckIdentifier$Outbound = {
  type: "paychecks";
  id: string;
};

/** @internal */
export const PaycheckIdentifier$outboundSchema: z.ZodType<
  PaycheckIdentifier$Outbound,
  z.ZodTypeDef,
  PaycheckIdentifier
> = z.object({
  type: z.literal("paychecks"),
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaycheckIdentifier$ {
  /** @deprecated use `PaycheckIdentifier$inboundSchema` instead. */
  export const inboundSchema = PaycheckIdentifier$inboundSchema;
  /** @deprecated use `PaycheckIdentifier$outboundSchema` instead. */
  export const outboundSchema = PaycheckIdentifier$outboundSchema;
  /** @deprecated use `PaycheckIdentifier$Outbound` instead. */
  export type Outbound = PaycheckIdentifier$Outbound;
}

export function paycheckIdentifierToJSON(
  paycheckIdentifier: PaycheckIdentifier,
): string {
  return JSON.stringify(
    PaycheckIdentifier$outboundSchema.parse(paycheckIdentifier),
  );
}

export function paycheckIdentifierFromJSON(
  jsonString: string,
): SafeParseResult<PaycheckIdentifier, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaycheckIdentifier$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaycheckIdentifier' from JSON`,
  );
}
