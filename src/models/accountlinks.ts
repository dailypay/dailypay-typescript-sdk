/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type AccountLinks = {
  /**
   * The URI for the account
   */
  self: string;
};

/** @internal */
export const AccountLinks$inboundSchema: z.ZodType<
  AccountLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.string(),
});

/** @internal */
export type AccountLinks$Outbound = {
  self: string;
};

/** @internal */
export const AccountLinks$outboundSchema: z.ZodType<
  AccountLinks$Outbound,
  z.ZodTypeDef,
  AccountLinks
> = z.object({
  self: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountLinks$ {
  /** @deprecated use `AccountLinks$inboundSchema` instead. */
  export const inboundSchema = AccountLinks$inboundSchema;
  /** @deprecated use `AccountLinks$outboundSchema` instead. */
  export const outboundSchema = AccountLinks$outboundSchema;
  /** @deprecated use `AccountLinks$Outbound` instead. */
  export type Outbound = AccountLinks$Outbound;
}

export function accountLinksToJSON(accountLinks: AccountLinks): string {
  return JSON.stringify(AccountLinks$outboundSchema.parse(accountLinks));
}

export function accountLinksFromJSON(
  jsonString: string,
): SafeParseResult<AccountLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AccountLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountLinks' from JSON`,
  );
}
