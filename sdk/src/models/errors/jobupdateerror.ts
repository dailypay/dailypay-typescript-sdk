/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as models from "../index.js";
import { SDKError } from "./sdkerror.js";

/**
 * Bad Request
 */
export type JobUpdateErrorData = {
  /**
   * A list of errors that occurred.
   */
  errors: Array<models.ErrorJobUpdateError>;
};

/**
 * Bad Request
 */
export class JobUpdateError extends SDKError {
  /**
   * A list of errors that occurred.
   */
  errors: Array<models.ErrorJobUpdateError>;

  /** The original data that was passed to this error instance. */
  data$: JobUpdateErrorData;

  constructor(
    err: JobUpdateErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.errors = err.errors;

    this.name = "JobUpdateError";
  }
}

/** @internal */
export const JobUpdateError$inboundSchema: z.ZodType<
  JobUpdateError,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(models.ErrorJobUpdateError$inboundSchema),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new JobUpdateError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type JobUpdateError$Outbound = {
  errors: Array<models.ErrorJobUpdateError$Outbound>;
};

/** @internal */
export const JobUpdateError$outboundSchema: z.ZodType<
  JobUpdateError$Outbound,
  z.ZodTypeDef,
  JobUpdateError
> = z.instanceof(JobUpdateError)
  .transform(v => v.data$)
  .pipe(z.object({
    errors: z.array(models.ErrorJobUpdateError$outboundSchema),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobUpdateError$ {
  /** @deprecated use `JobUpdateError$inboundSchema` instead. */
  export const inboundSchema = JobUpdateError$inboundSchema;
  /** @deprecated use `JobUpdateError$outboundSchema` instead. */
  export const outboundSchema = JobUpdateError$outboundSchema;
  /** @deprecated use `JobUpdateError$Outbound` instead. */
  export type Outbound = JobUpdateError$Outbound;
}
