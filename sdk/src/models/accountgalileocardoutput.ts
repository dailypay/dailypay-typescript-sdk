/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * An account of type CARD with subtype GALILEO.
 */
export type AccountGalileoCardOutput = {
  /**
   * The card ID provided by Galileo.
   */
  galileoCardId: string;
  /**
   * The first name of the account holder.
   */
  firstName: string;
  /**
   * The last name of the account holder.
   */
  lastName: string;
  /**
   * Last four digits of the card number.
   */
  lastFour: string;
  /**
   * The issuer of the card.
   */
  issuer: string;
  /**
   * The month of the expiration date for the card.
   */
  expirationMonth: string;
  /**
   * The year of the expiration date for the card.
   */
  expirationYear: string;
};

/** @internal */
export const AccountGalileoCardOutput$inboundSchema: z.ZodType<
  AccountGalileoCardOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  galileo_card_id: z.string(),
  first_name: z.string(),
  last_name: z.string(),
  last_four: z.string(),
  issuer: z.string(),
  expiration_month: z.string(),
  expiration_year: z.string(),
}).transform((v) => {
  return remap$(v, {
    "galileo_card_id": "galileoCardId",
    "first_name": "firstName",
    "last_name": "lastName",
    "last_four": "lastFour",
    "expiration_month": "expirationMonth",
    "expiration_year": "expirationYear",
  });
});

/** @internal */
export type AccountGalileoCardOutput$Outbound = {
  galileo_card_id: string;
  first_name: string;
  last_name: string;
  last_four: string;
  issuer: string;
  expiration_month: string;
  expiration_year: string;
};

/** @internal */
export const AccountGalileoCardOutput$outboundSchema: z.ZodType<
  AccountGalileoCardOutput$Outbound,
  z.ZodTypeDef,
  AccountGalileoCardOutput
> = z.object({
  galileoCardId: z.string(),
  firstName: z.string(),
  lastName: z.string(),
  lastFour: z.string(),
  issuer: z.string(),
  expirationMonth: z.string(),
  expirationYear: z.string(),
}).transform((v) => {
  return remap$(v, {
    galileoCardId: "galileo_card_id",
    firstName: "first_name",
    lastName: "last_name",
    lastFour: "last_four",
    expirationMonth: "expiration_month",
    expirationYear: "expiration_year",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountGalileoCardOutput$ {
  /** @deprecated use `AccountGalileoCardOutput$inboundSchema` instead. */
  export const inboundSchema = AccountGalileoCardOutput$inboundSchema;
  /** @deprecated use `AccountGalileoCardOutput$outboundSchema` instead. */
  export const outboundSchema = AccountGalileoCardOutput$outboundSchema;
  /** @deprecated use `AccountGalileoCardOutput$Outbound` instead. */
  export type Outbound = AccountGalileoCardOutput$Outbound;
}

export function accountGalileoCardOutputToJSON(
  accountGalileoCardOutput: AccountGalileoCardOutput,
): string {
  return JSON.stringify(
    AccountGalileoCardOutput$outboundSchema.parse(accountGalileoCardOutput),
  );
}

export function accountGalileoCardOutputFromJSON(
  jsonString: string,
): SafeParseResult<AccountGalileoCardOutput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AccountGalileoCardOutput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountGalileoCardOutput' from JSON`,
  );
}
