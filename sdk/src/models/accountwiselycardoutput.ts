/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type AccountWiselyCardOutput = {
  /**
   * The first name of the account holder.
   */
  firstName: string;
  /**
   * The last name of the account holder.
   */
  lastName: string;
  /**
   * The month of the expiration date for the card.
   */
  expirationMonth: string;
  /**
   * The year of the expiration date for the card.
   */
  expirationYear: string;
  /**
   * Wisely unique identifier associated to card.
   */
  wiselyToken: string;
  /**
   * Last four digits of the card number.
   */
  lastFour: string;
  /**
   * The issuer of the card.
   */
  issuer: string;
};

/** @internal */
export const AccountWiselyCardOutput$inboundSchema: z.ZodType<
  AccountWiselyCardOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  first_name: z.string(),
  last_name: z.string(),
  expiration_month: z.string(),
  expiration_year: z.string(),
  wisely_token: z.string(),
  last_four: z.string(),
  issuer: z.string(),
}).transform((v) => {
  return remap$(v, {
    "first_name": "firstName",
    "last_name": "lastName",
    "expiration_month": "expirationMonth",
    "expiration_year": "expirationYear",
    "wisely_token": "wiselyToken",
    "last_four": "lastFour",
  });
});

/** @internal */
export type AccountWiselyCardOutput$Outbound = {
  first_name: string;
  last_name: string;
  expiration_month: string;
  expiration_year: string;
  wisely_token: string;
  last_four: string;
  issuer: string;
};

/** @internal */
export const AccountWiselyCardOutput$outboundSchema: z.ZodType<
  AccountWiselyCardOutput$Outbound,
  z.ZodTypeDef,
  AccountWiselyCardOutput
> = z.object({
  firstName: z.string(),
  lastName: z.string(),
  expirationMonth: z.string(),
  expirationYear: z.string(),
  wiselyToken: z.string(),
  lastFour: z.string(),
  issuer: z.string(),
}).transform((v) => {
  return remap$(v, {
    firstName: "first_name",
    lastName: "last_name",
    expirationMonth: "expiration_month",
    expirationYear: "expiration_year",
    wiselyToken: "wisely_token",
    lastFour: "last_four",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountWiselyCardOutput$ {
  /** @deprecated use `AccountWiselyCardOutput$inboundSchema` instead. */
  export const inboundSchema = AccountWiselyCardOutput$inboundSchema;
  /** @deprecated use `AccountWiselyCardOutput$outboundSchema` instead. */
  export const outboundSchema = AccountWiselyCardOutput$outboundSchema;
  /** @deprecated use `AccountWiselyCardOutput$Outbound` instead. */
  export type Outbound = AccountWiselyCardOutput$Outbound;
}

export function accountWiselyCardOutputToJSON(
  accountWiselyCardOutput: AccountWiselyCardOutput,
): string {
  return JSON.stringify(
    AccountWiselyCardOutput$outboundSchema.parse(accountWiselyCardOutput),
  );
}

export function accountWiselyCardOutputFromJSON(
  jsonString: string,
): SafeParseResult<AccountWiselyCardOutput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AccountWiselyCardOutput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountWiselyCardOutput' from JSON`,
  );
}
