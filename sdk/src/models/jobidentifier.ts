/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type JobIdentifier = {
  type: "jobs";
  id: string;
};

/** @internal */
export const JobIdentifier$inboundSchema: z.ZodType<
  JobIdentifier,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal("jobs"),
  id: z.string(),
});

/** @internal */
export type JobIdentifier$Outbound = {
  type: "jobs";
  id: string;
};

/** @internal */
export const JobIdentifier$outboundSchema: z.ZodType<
  JobIdentifier$Outbound,
  z.ZodTypeDef,
  JobIdentifier
> = z.object({
  type: z.literal("jobs"),
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobIdentifier$ {
  /** @deprecated use `JobIdentifier$inboundSchema` instead. */
  export const inboundSchema = JobIdentifier$inboundSchema;
  /** @deprecated use `JobIdentifier$outboundSchema` instead. */
  export const outboundSchema = JobIdentifier$outboundSchema;
  /** @deprecated use `JobIdentifier$Outbound` instead. */
  export type Outbound = JobIdentifier$Outbound;
}

export function jobIdentifierToJSON(jobIdentifier: JobIdentifier): string {
  return JSON.stringify(JobIdentifier$outboundSchema.parse(jobIdentifier));
}

export function jobIdentifierFromJSON(
  jsonString: string,
): SafeParseResult<JobIdentifier, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => JobIdentifier$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'JobIdentifier' from JSON`,
  );
}
