/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { organizationsList } from "../funcs/organizationsList.js";
import { organizationsRead } from "../funcs/organizationsRead.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Organizations extends ClientSDK {
  /**
   * Get an organization
   *
   * @remarks
   * Lookup organization by ID for a detailed view of single organization.
   */
  async read(
    request: operations.ReadOrganizationRequest,
    options?: RequestOptions,
  ): Promise<models.OrganizationData> {
    return unwrapAsync(organizationsRead(
      this,
      request,
      options,
    ));
  }

  /**
   * List organizations
   *
   * @remarks
   * Get organizations with an optional filter
   */
  async list(
    request?: operations.ListOrganizationsRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.OrganizationsData> {
    return unwrapAsync(organizationsList(
      this,
      request,
      options,
    ));
  }
}
