/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { peopleRead } from "../funcs/peopleRead.js";
import { peopleUpdate } from "../funcs/peopleUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class People extends ClientSDK {
  /**
   * Get a person object
   *
   * @remarks
   * Returns details about a person.
   */
  async read(
    request: operations.ReadPersonRequest,
    options?: RequestOptions,
  ): Promise<models.PersonData> {
    return unwrapAsync(peopleRead(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a person
   *
   * @remarks
   * Update a person object.
   */
  async update(
    request: operations.UpdatePersonRequest,
    options?: RequestOptions,
  ): Promise<models.PersonData> {
    return unwrapAsync(peopleUpdate(
      this,
      request,
      options,
    ));
  }
}
